name: release-testpypi

on:
  push:
    # Only tags that contain a hyphen
    tags:
      - "v*-*"
  workflow_dispatch:

env:
  PACKAGE_NAME: ParallelKDEpy

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0 # ensure VCS tags are visible to the build (for dynamic versioning)
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Build (PEP 517)
        run: |
          python -m pip install --upgrade pip build
          python -m build
      - name: Twine check
        run: |
          python -m pip install --upgrade twine
          twine check dist/*
      - uses: actions/upload-artifact@v5
        with:
          name: dists
          path: dist/

  publish-testpypi:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/ParallelKDEpy
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dists
          path: dist/
      - name: Publish to TestPyPI (Trusted Publisher)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  install-check:
    needs: publish-testpypi
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install from TestPyPI
        run: |
          python -m pip install --upgrade pip
          python -m pip install --pre \
            --index-url https://test.pypi.org/simple/ \
            --extra-index-url https://pypi.org/simple \
            "${{ env.PACKAGE_NAME }}"
      - name: Import sanity check
        run: |
          python - <<'PY'
          import importlib, os
          pkg = os.environ.get("PACKAGE_NAME")
          try:
            mod = importlib.import_module(pkg.replace('-', '_'))
          except ModuleNotFoundError:
            mod = importlib.import_module(pkg)
          print("Imported:", mod.__name__)
          print("Version:", getattr(mod, "__version__", "unknown"))
          PY
